#PROXY SET UP SCRIPT - June 23
from PySide import QtCore, QtGui
from shiboken import wrapInstance
import maya.OpenMayaUI as apiUI
import sys
pjointList = []

#creates joints and attaches to spheres
def xyzSphere(xyzSphere):
    cmds.select( clear=True )
    jointLoc = cmds.xform(xyzSphere, q=1, ws=1, t=1)
    scaleLoc = cmds.xform(xyzSphere, q=1, ws=1, s=1)
    proxyJoint=cmds.joint(p=(jointLoc),r=(scaleLoc[0]))
    pjointList.append(proxyJoint)
    cmds.parent(proxyJoint,xyzSphere)
    cmds.setAttr(proxyJoint + '.visibility',0)
    
#set inputs for joint locations and pivot location
cmds.polySphere( r=1, n = 'firstJoint' ) 
cmds.move(-6,0,0,'firstJoint') 
cmds.polySphere( r=1, n = 'secondJoint' )
cmds.polySphere( r=1, n = 'thirdJoint' )
cmds.move(6,0,0,'thirdJoint')
cmds.polyCylinder(r=.3, n='tendon')
cmds.rotate(0,0,90,'tendon')
cmds.move(-3,0,0,'tendon')
cmds.scale(1,3,1,'tendon')
cmds.polyCylinder(r=.3, n='tendon02')
cmds.rotate(0,0,90,'tendon02')
cmds.move(3,0,0,'tendon02')
cmds.scale(1,3,1,'tendon02')

#poleVector
cmds.polyCube(n='poleGuide')
cmds.move(0,3,0,'poleGuide')
cmds.scale(.1,6,.1,'poleGuide')
cmds.select( clear=True )
cmds.joint(n='poleJoint')
cmds.setAttr('poleJoint.visibility',0)
cmds.move(0,6,0,'poleJoint')
cmds.spaceLocator(n='poleVector')
cmds.move(0,6,0,'poleVector')
cmds.parent('poleJoint','poleVector')

#finding sphere location and setting up    
xyzSphere('firstJoint')
xyzSphere('secondJoint')
xyzSphere('thirdJoint')
pjointList.append('poleJoint')

#Skinning to joints
cmds.select( d=True )
cmds.select('tendon',tgl=True)
cmds.select(pjointList,tgl=True)
cmds.skinCluster(tsb=True, maximumInfluences=4, normalizeWeights=1, obeyMaxInfluences=True)

cmds.select( d=True )
cmds.select('tendon02',add=True)
cmds.select(pjointList,add=True)
cmds.skinCluster(tsb=True, maximumInfluences=4, normalizeWeights=1, obeyMaxInfluences=True)

cmds.select( d=True )
cmds.select('poleGuide',add=True)
cmds.select(pjointList,add=True)
cmds.skinCluster(tsb=True, maximumInfluences=4, normalizeWeights=1, obeyMaxInfluences=True)

#Put everything in a group
cmds.select( d=True )
cmds.select(all=True)
proxySelect = cmds.ls(selection=True)
cmds.group(proxySelect, n='proxy_grp')

###INPUTS####
for Joint in pjointList:
   if Joint != 'poleJoint':
       cmds.select( d=True )
       jointLoc = cmds.xform(Joint, q=1, ws=1, t=1) 
       scaleLoc = cmds.xform(Joint, q=1, ws=1, s=1)
       pJoint=cmds.joint(p=(jointLoc), n='worked')
   
   else: 
       polePos = cmds.xform(Joint, q=1, ws=1, t=1)
    
   
#delete proxy
#cmds.delete(proxySelect)

    







